<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAAwAFADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1DxfcTQ614dWKaRFe8VXVHIDDzIuDjr1P51x3hHUL2bQdKeW8
        uHZkj3F5WJP729HOT6Kv5D0rrfGn/Ic8M/8AX6v/AKMirifBv/IvaR/uRf8Ao6+oAZ8PdSv7nT1M97cy
        n7bpS5eVm4a2QsOT3PJ9agtdT1A+DtUlN/dGRdYt0VzM2Qpv5FIBz02gDHpxTPhv/wAg5f8Ar+0f/wBJ
        Uqvaf8iTq3/Yatv/AE4y0AaetalfRw6GUvbld86BsSsNw/s9G555+bn681o2d/eHw7vN3OXzefMZWzxb
        oR37HmsXXf8AUaB/18J/6bUrSsv+RZ/G9/8ASZKAOcsdZ1T+yY2/tK8yZdfyfPb+CAFO/wDCeR6dq662
        v7xvAehzNd3BlfUNruZW3MMNwTnkVwdh/wAgiP8A66+Iv/ScV2lp/wAk80D/ALCP9GoA5HTtY1RvHrwt
        qV4Yv7R1xdhnfbhIcoMZ6KeR6dq9X+HdzPcWl+Z55ZSsygGRy2OPevG9N/5KG/8A2Etf/wDRFev/AA0/
        489R/wCuy/8AoNAFjxp/yHPDP/X6v/oyKuJ8G/8AIvaR/uRf+jr6u28af8hzwz/1+r/6MirifBv/ACL2
        kf7kX/o6+oApfDf/AJBy/wDX9o//AKSpVe0/5EnVv+w1bf8Apxlqx8N/+Qcv/X9o/wD6SpVe0/5EnVv+
        w1bf+nGWgC1rv+o0D/r4T/02pWlZf8iz+N7/AOkyVm67/qNA/wCvhP8A02pWlZf8iz+N7/6TJQBx1h/y
        CI/+uviL/wBJxXaWn/JPNA/7CP8ARq4uw/5BEf8A118Rf+k4rtLT/knmgf8AYR/o1AHCab/yUN/+wlr/
        AP6Ir1/4af8AHnqP/XZf/Qa8g03/AJKG/wD2Etf/APRFev8Aw0/489R/67L/AOg0AWPGn/Ic8M/9fq/+
        jIq4nwbx4e0jP9yL/wBHX1eh3+g3uq6nbXFxdIiWV950IEf348xsBweuVYZNc8vhK78MeHre1guLi5n2
        pbpNbQN+6Iknk81lAYlR5uNoHJABIBOADkPhuR/Zy8j/AI/tH/8ASVKr2n/Ikat0/wCQ1bf+nGWvR5dJ
        uLDVr4aXab0axLRKlqIo4JkjAiK/wuxPTjK4xnHFZVxp14ujvHa2V/8AZ2nleHNqPNeQIrRGQbc7fOMh
        ywx0JOOaAOW10jydAGR/x8J/6bUrTs8f8I1263v/AKTJXV3WiNq2tahZ+TJbW8cISEyW5aPzNsY3xnaA
        oCgpw2Tk5wFGbNn4de21SwtsSNa2lnmY4AiuZCCmCpBwcAlj1Py9s0AeNWJH9kR8j/W+Iv8A0nFdnaEf
        8K88P8j/AJCP9Gro4tHu7jwdqSS6LHYapA1wYjHBFIZC6hm8sYIAbPlnjJC881duNMZfFEENtDMNOW3f
        fALciCGTA2yLkbWPbauDkkmgDxXTP+SiP/2Etf8A/RFev/DT/jz1H/rsv/oNZln4Bn1O90zVHm+zPZC+
        idpLYq94Z49nnMCcockkg5PHbPG9pfh/U/DqxxWU4uFnuVaZggXagAGDuPTG7kc5x70Af//Z
</value>
  </data>
</root>